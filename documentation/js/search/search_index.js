var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.482,1,2.016]],["body/controllers/AppController.html",[0,2.142,1,2.913,2,1.63,3,0.368,4,0.318,5,0.318,6,2.892,7,0.532,8,1.497,9,2.915,10,4.571,11,3.479,12,5.105,13,1.63,14,0.034,15,0.796,16,3.479,17,1.243,18,1.043,19,0.657,20,1.043,21,3.096,22,1.139,23,2.217,24,0.624,25,0.873,26,2.633,27,2.892,28,0.475,29,0.057,30,2.505,31,1.986,32,3.479,33,5.105,34,2.913,35,1.486,36,0.025,37,0.025]],["title/modules/AppModule.html",[38,1.236,39,2.016]],["body/modules/AppModule.html",[1,2.838,2,1.79,3,0.283,4,0.245,5,0.245,8,0.877,14,0.034,15,0.613,17,0.957,18,0.803,19,0.505,20,0.803,22,0.877,24,0.781,25,0.672,26,2.754,27,2.226,28,0.366,29,0.044,36,0.021,37,0.021,38,1.739,39,3.696,40,1.381,41,1.381,42,1.706,43,1.706,44,1.381,45,2.838,46,1.706,47,2.226,48,2.226,49,2.226,50,3.048,51,2.754,52,2.434,53,1.706,54,1.706,55,2.677,56,3.175,57,2.677,58,3.82,59,4.856,60,2.677,61,2.677,62,1.928,63,3.82,64,2.677,65,2.677,66,1.928,67,1.255,68,1.706,69,2.677,70,2.677,71,1.928,72,1.706,73,2.226,74,1.706,75,1.706,76,2.677,77,2.226,78,1.928,79,2.677]],["title/injectables/AppService.html",[26,1.632,80,0.724]],["body/injectables/AppService.html",[3,0.428,4,0.37,5,0.37,7,0.62,8,1.649,14,0.033,15,0.927,22,1.326,24,0.553,25,1.016,26,2.598,28,0.553,29,0.066,35,1.73,36,0.027,37,0.027,80,1.153,81,1.73,82,3.366,83,5.737,84,4.049,85,2.152,86,4.049,87,4.049]],["title/classes/Auth.html",[29,0.052,88,2.016]],["body/classes/Auth.html",[3,0.491,4,0.425,5,0.425,14,0.031,28,0.634,29,0.076,36,0.029,37,0.029,88,3.487,89,1.984,90,3.86]],["title/controllers/AuthController.html",[0,1.482,91,2.016]],["body/controllers/AuthController.html",[0,1.25,2,1.25,3,0.282,4,0.244,5,0.244,7,0.408,8,1.248,13,1.786,14,0.034,15,0.872,17,1.362,18,1.143,19,0.719,20,1.143,22,1.248,24,0.728,25,0.669,28,0.364,29,0.044,30,1.922,31,1.524,35,1.628,36,0.02,37,0.02,88,1.7,91,2.428,92,2.218,93,2.218,94,4.031,95,3.168,96,2.218,97,2.751,98,3.09,99,3.201,100,2.668,101,4.031,102,1.01,103,2.668,104,2.218,105,3.045,106,2.668,107,2.428,108,2.668,109,2.218,110,2.218,111,2.218,112,2.218,113,2.218,114,2.293,115,2.218,116,2.218,117,1.922,118,3.695,119,2.218,120,1.376,121,1.25,122,2.668,123,2.668,124,2.668,125,3.168,126,2.668,127,2.668,128,2.668,129,2.668,130,2.668,131,2.668]],["title/modules/AuthModule.html",[38,1.236,50,1.806]],["body/modules/AuthModule.html",[2,1.848,3,0.296,4,0.256,5,0.256,14,0.034,24,0.789,25,0.703,28,0.382,29,0.046,36,0.021,37,0.021,38,1.783,40,1.445,41,1.445,42,1.785,43,1.785,44,1.445,45,2.909,46,1.785,50,3.412,51,2.795,52,2.513,53,1.785,54,1.785,56,2.328,66,2.017,67,1.312,71,2.017,72,1.785,91,2.909,102,0.583,114,2.694,115,2.328,132,2.328,133,2.801,134,2.328,135,2.982,136,2.231,137,2.801,138,2.801,139,2.252,140,1.599,141,2.801,142,2.328,143,2.328,144,2.801,145,2.328,146,2.328,147,2.017,148,2.801,149,2.801,150,2.801,151,2.801]],["title/injectables/AuthService.html",[80,0.724,114,1.632]],["body/injectables/AuthService.html",[3,0.212,4,0.183,5,0.183,7,0.306,8,1.007,9,2.74,14,0.034,15,0.858,17,1.34,18,1.124,19,0.708,20,1.124,21,2.141,22,1.007,23,1.96,24,0.771,25,0.502,28,0.273,29,0.033,31,2.141,35,1.314,36,0.017,37,0.017,67,0.937,71,1.44,72,1.274,80,0.704,81,0.854,85,0.854,94,2.557,95,2.557,96,2.557,97,2.475,98,2.389,99,3.032,102,0.876,104,2.557,105,2.594,114,1.587,116,1.663,117,1.44,121,1.757,136,2.135,140,1.142,142,1.663,143,4.155,152,1.663,153,1.44,154,1.663,155,3.032,156,2,157,1.757,158,2,159,2,160,1.663,161,1.274,162,1.663,163,2,164,1.663,165,0.937,166,1.44,167,1.274,168,1.663,169,2,170,1.663,171,2.389,172,2.403,173,3.273,174,2,175,2,176,3.076,177,2,178,2,179,2.7,180,2.141,181,3.076,182,2,183,2,184,2,185,2,186,2,187,2,188,2,189,2,190,2,191,2,192,2,193,2,194,2,195,2,196,2,197,2,198,2,199,2,200,1.032,201,2,202,2,203,2,204,2,205,2]],["title/classes/CreateUserDto.html",[29,0.052,165,1.482]],["body/classes/CreateUserDto.html",[3,0.222,4,0.192,5,0.192,7,0.322,13,2.292,14,0.033,15,1.12,18,1.295,19,0.924,24,0.436,28,0.287,29,0.052,36,0.017,37,0.017,85,2.239,89,0.898,102,1.14,120,1.084,165,1.497,166,3.663,200,2.524,206,1.513,207,1.248,208,3.346,209,2.784,210,2.228,211,2.784,212,2.96,213,2.228,214,1.747,215,3.118,216,1.747,217,2.656,218,2.656,219,2.101,220,1.747,221,1.513,222,1.513,223,2.101,224,2.656,225,2.656,226,1.747,227,3.213,228,2.301,229,2.101,230,1.747,231,2.036,232,2.656,233,2.656,234,2.656,235,1.747,236,1.747,237,1.513,238,2.101,239,2.656,240,1.747,241,2.101,242,1.513,243,1.513,244,2.101,245,3.663,246,2.301,247,3.524,248,3.213,249,2.656,250,3.346,251,1.513,252,1.747,253,1.339,254,1.513,255,1.747,256,1.747,257,1.747,258,2.396,259,1.513,260,1.513,261,2.656,262,1.747,263,2.656,264,1.747,265,1.747,266,1.747,267,1.747,268,1.513]],["title/injectables/JwtAuthGuard.html",[80,0.724,269,2.016]],["body/injectables/JwtAuthGuard.html",[3,0.542,4,0.277,5,0.277,7,0.463,8,1.363,14,0.034,15,0.952,17,1.488,18,1.248,19,0.571,20,1.248,22,1.363,24,0.65,25,1.044,28,0.413,29,0.05,35,1.778,36,0.022,37,0.022,80,0.952,81,1.293,102,1.118,179,2.997,180,1.728,269,2.652,270,3.426,271,3.426,272,2.515,273,2.652,274,4.162,275,4.162,276,4.162,277,4.162,278,5.123,279,3.026,280,3.026,281,4.162,282,3.026,283,4.757,284,3.026,285,2.179,286,4.162,287,3.026,288,3.026,289,3.026,290,2.515,291,3.026]],["title/injectables/JwtStrategy.html",[80,0.724,135,1.806]],["body/injectables/JwtStrategy.html",[3,0.341,4,0.295,5,0.295,7,0.493,8,1.423,9,2.806,14,0.034,15,0.994,17,1.152,18,0.967,19,0.609,20,0.967,22,1.055,23,2.054,24,0.718,25,0.809,28,0.44,29,0.053,35,1.377,36,0.023,37,0.023,80,0.994,81,1.377,135,2.481,153,3.54,200,1.663,210,1.663,273,2.769,285,2.321,292,2.68,293,4.345,294,4.345,295,3.223,296,4.345,297,3.223,298,3.223,299,3.223,300,3.223,301,3.223,302,3.223,303,3.223,304,3.223,305,2.68,306,2.68,307,3.223,308,3.223,309,3.223,310,3.223,311,3.223,312,3.223,313,3.223,314,3.223,315,3.223,316,3.223]],["title/injectables/LimitMiddleware.html",[80,0.724,317,2.279]],["body/injectables/LimitMiddleware.html",[3,0.344,4,0.297,5,0.297,7,0.497,8,1.43,14,0.034,15,0.744,17,1.162,18,0.975,19,0.614,20,0.975,22,1.064,24,0.597,25,0.815,28,0.444,29,0.053,36,0.023,37,0.023,62,3.554,78,2.341,80,1,81,1.388,98,2.784,121,1.523,237,3.146,251,2.341,317,3.146,318,2.702,319,3.632,320,3.632,321,4.387,322,4.387,323,3.25,324,2.341,325,3.632,326,4.369,327,2.702,328,3.632,329,4.369,330,3.25,331,3.25,332,3.25,333,3.25,334,3.25,335,3.25,336,2.702,337,3.25,338,3.25]],["title/injectables/LoggerMiddleware.html",[68,2.016,80,0.724]],["body/injectables/LoggerMiddleware.html",[3,0.28,4,0.242,5,0.242,7,0.406,8,1.242,14,0.034,15,0.868,17,0.947,18,0.795,19,0.5,20,0.795,22,0.868,24,0.518,25,0.665,28,0.362,29,0.043,36,0.02,37,0.02,62,3.189,68,2.417,78,1.909,80,0.868,81,1.132,98,1.689,99,3.481,121,1.242,168,4.018,171,2.822,172,3.128,180,2.165,207,1.481,319,3.153,320,3.153,321,4.018,322,4.018,324,1.909,325,3.153,336,2.203,339,2.203,340,4.833,341,2.65,342,2.203,343,1.909,344,3.792,345,2.65,346,4.428,347,2.65,348,2.65,349,2.65,350,2.65,351,2.65,352,2.65,353,2.65,354,2.65,355,2.65,356,2.65,357,2.65,358,2.65,359,2.65,360,2.65,361,2.65,362,2.65,363,2.65,364,2.65,365,2.65,366,2.65,367,2.65,368,2.65,369,2.65,370,2.65]],["title/classes/LoginDto.html",[29,0.052,97,1.632]],["body/classes/LoginDto.html",[3,0.353,4,0.305,5,0.305,7,0.51,13,2.082,14,0.033,15,1.017,19,0.839,24,0.607,28,0.455,29,0.073,36,0.024,37,0.024,85,2.277,89,1.424,97,2.291,102,1.11,120,1.719,200,2.946,207,1.735,212,3.538,215,2.831,221,2.4,222,2.4,242,2.4,243,2.4,245,3.599,246,3.199,247,3.199,250,3.199,253,2.123,258,2.291,259,2.4,260,2.4,268,2.4,371,2.77,372,3.332,373,3.332,374,3.332]],["title/classes/RegisterDto.html",[29,0.052,105,1.806]],["body/classes/RegisterDto.html",[3,0.227,4,0.196,5,0.196,7,0.328,13,2.309,14,0.033,15,1.128,18,1.308,19,0.93,24,0.442,28,0.292,29,0.053,36,0.017,37,0.017,85,2.252,89,0.915,102,1.145,105,1.85,120,1.104,200,2.542,207,1.265,208,3.373,209,2.816,210,2.249,211,2.816,212,2.985,213,2.249,214,1.78,215,3.14,216,1.78,217,2.694,218,2.694,220,1.78,221,1.542,222,1.542,224,2.694,225,2.694,226,1.78,227,3.25,228,2.334,230,1.78,231,2.065,232,2.694,233,2.694,234,2.694,235,1.78,236,1.78,237,1.542,239,2.694,240,1.78,242,1.542,243,1.542,245,3.686,246,2.334,247,3.549,248,3.25,249,2.694,250,3.373,251,1.542,252,1.78,253,1.364,254,1.542,255,1.78,256,1.78,257,1.78,258,2.416,259,1.542,260,1.542,261,2.694,262,1.78,263,2.694,264,1.78,265,1.78,266,1.78,267,1.78,268,1.542,375,1.78,376,2.141,377,2.141,378,2.141,379,2.141,380,2.141,381,2.141]],["title/interfaces/SessionData.html",[382,1.806,383,1.806]],["body/interfaces/SessionData.html",[3,0.424,4,0.367,5,0.367,7,0.613,14,0.033,19,0.757,20,1.501,21,3.116,24,0.547,36,0.027,37,0.027,38,1.565,121,2.345,207,1.955,213,2.815,382,2.288,383,3.116,384,2.886,385,3.332,386,5.716,387,3.332]],["title/interfaces/SessionData-1.html",[34,1.692,382,1.516,383,1.516]],["body/interfaces/SessionData-1.html",[3,0.404,4,0.349,5,0.349,7,0.584,14,0.034,19,0.72,20,1.455,21,3.046,24,0.662,36,0.026,37,0.026,38,1.49,97,2.99,102,1.207,117,2.747,121,2.273,155,2.747,207,1.895,382,2.178,383,3.046,384,2.747,387,3.171,388,3.171,389,3.814]],["title/classes/UpdateUserDto.html",[29,0.052,390,1.806]],["body/classes/UpdateUserDto.html",[3,0.447,4,0.386,5,0.386,14,0.033,24,0.706,28,0.577,29,0.069,36,0.028,37,0.028,89,1.804,107,2.69,165,1.978,167,2.69,206,3.041,273,3.294,390,2.951,391,3.51,392,5.169,393,4.222,394,3.51,395,3.51]],["title/classes/User.html",[29,0.052,102,0.659]],["body/classes/User.html",[3,0.293,4,0.253,5,0.253,7,0.424,13,2.53,14,0.034,15,1.236,19,1.019,24,0.62,28,0.62,29,0.045,36,0.021,37,0.021,67,1.299,85,2.496,89,1.184,102,0.815,139,2.235,147,2.819,157,1.582,161,2.892,172,2.235,200,2.341,207,1.529,208,3.269,209,3.269,210,2.341,211,3.269,212,2.892,213,2.019,231,1.766,273,1.766,396,1.996,397,6.013,398,2.771,399,2.771,400,2.771,401,2.771,402,2.771,403,2.771,404,2.771,405,3.914,406,2.771,407,2.304,408,2.304]],["title/classes/User-1.html",[29,0.043,34,1.692,102,0.553]],["body/classes/User-1.html",[3,0.491,4,0.425,5,0.425,14,0.031,28,0.634,29,0.076,36,0.029,37,0.029,89,1.984,102,1.14,409,3.86]],["title/controllers/UsersController.html",[0,1.482,410,2.016]],["body/controllers/UsersController.html",[0,0.727,2,0.727,3,0.164,4,0.142,5,0.142,7,0.238,8,0.824,9,2.785,13,1.712,14,0.034,15,0.836,17,1.136,18,0.953,19,0.758,20,0.953,22,1.197,23,1.604,24,0.684,25,0.389,28,0.212,29,0.025,30,1.118,31,0.886,34,0.989,35,1.716,36,0.014,37,0.014,74,0.989,75,1.604,85,1.357,93,1.29,101,3.924,102,0.944,107,1.604,109,2.093,110,1.29,111,1.29,112,1.29,113,1.29,118,3.34,119,1.29,120,0.801,125,3.038,136,1.357,140,0.886,165,2.016,167,1.604,171,0.989,172,1.438,173,2.893,210,2.586,213,1.639,231,2.024,254,1.118,258,2.337,269,0.989,270,1.118,271,1.118,290,3.038,343,1.118,390,0.886,410,1.604,411,1.29,412,2.518,413,2.518,414,3.038,415,3.655,416,1.552,417,1.552,418,1.552,419,1.552,420,1.29,421,1.552,422,1.552,423,4.302,424,4.72,425,1.552,426,2.518,427,2.518,428,2.518,429,1.552,430,1.552,431,3.655,432,1.552,433,1.29,434,1.552,435,1.552,436,1.552,437,1.552,438,1.552,439,1.552,440,1.552,441,1.552,442,1.552,443,1.29,444,1.29,445,1.29,446,1.552,447,3.177,448,2.518,449,3.177,450,2.518,451,3.177,452,1.552,453,2.641,454,1.552,455,1.118,456,1.552,457,1.552,458,1.552,459,1.552,460,1.552,461,2.518,462,2.518,463,2.518,464,2.518,465,2.518,466,1.552,467,1.552,468,1.552,469,1.552,470,1.552,471,1.552,472,1.29,473,1.552,474,1.552,475,1.552,476,1.552,477,1.552,478,1.552,479,1.552,480,1.552,481,4.017,482,1.552,483,1.552,484,1.552,485,1.552,486,1.552,487,1.552,488,1.552,489,1.552]],["title/modules/UsersModule.html",[38,1.236,51,1.632]],["body/modules/UsersModule.html",[2,2.003,3,0.333,4,0.288,5,0.288,14,0.034,24,0.785,25,0.789,28,0.43,29,0.052,36,0.023,37,0.023,38,1.896,40,1.623,41,1.623,42,2.005,43,2.005,44,1.623,45,3.093,46,2.005,51,2.897,52,2.724,53,2.005,54,2.005,66,2.266,67,1.474,73,2.616,74,2.005,75,2.005,77,2.616,102,0.655,136,2.4,139,2.44,140,1.796,145,2.616,146,2.616,147,2.266,410,3.093,443,2.616,455,2.266,490,3.146,491,3.146,492,3.146,493,3.146,494,3.146,495,3.146,496,3.146,497,3.146]],["title/injectables/UsersService.html",[80,0.724,136,1.352]],["body/injectables/UsersService.html",[3,0.222,4,0.192,5,0.192,7,0.321,8,1.044,9,3.063,14,0.034,15,1.119,17,1.659,18,1.392,19,0.876,20,1.392,22,1.519,24,0.667,25,0.526,28,0.286,29,0.034,31,1.196,35,1.982,36,0.017,37,0.017,67,0.982,80,0.73,81,0.895,85,1.362,102,0.804,107,2.032,136,1.362,140,1.196,153,1.509,154,1.742,155,3.106,157,1.82,160,1.742,161,1.335,162,1.742,165,2.021,167,2.032,170,1.742,171,1.335,172,2.203,173,2.779,179,1.509,180,1.82,210,2.701,213,2.767,390,2.901,414,2.65,420,3.857,433,2.65,444,1.742,445,1.742,472,1.742,498,1.742,499,4.313,500,3.188,501,3.188,502,2.095,503,3.188,504,2.095,505,2.095,506,3.188,507,2.095,508,2.095,509,3.188,510,2.095,511,2.095,512,2.095,513,2.095,514,2.095,515,4.313,516,2.095,517,2.095,518,2.095,519,2.095,520,2.095,521,3.188,522,2.095,523,2.095]],["title/coverage.html",[524,3.09]],["body/coverage.html",[0,2.048,1,1.65,5,0.237,6,2.153,14,0.034,19,0.489,26,1.336,29,0.089,36,0.02,37,0.02,44,1.336,68,1.65,80,1.245,82,2.153,88,1.65,90,2.153,91,1.65,92,2.153,97,1.336,102,0.777,105,1.479,114,1.336,135,1.479,136,1.106,139,1.479,152,2.153,157,1.479,165,1.213,166,1.865,180,1.479,206,2.686,269,1.65,270,1.865,271,1.865,272,2.153,292,2.153,317,1.865,318,2.153,324,1.865,339,2.153,371,2.153,375,2.153,382,2.13,383,2.13,385,2.153,388,2.153,390,1.479,391,2.153,396,3.148,409,2.153,410,1.65,411,2.153,498,2.153,524,1.865,525,2.59,526,2.59,527,2.59,528,6.218,529,4.782,530,3.73,531,5.279,532,5.068,533,5.068,534,2.59,535,2.153,536,2.59,537,2.59,538,2.59]],["title/dependencies.html",[41,1.959,539,2.208]],["body/dependencies.html",[14,0.034,21,1.708,25,0.751,29,0.068,36,0.022,37,0.022,41,1.543,67,1.402,72,1.906,74,1.906,75,3.249,120,1.543,121,2.216,161,1.906,164,2.487,253,1.906,285,2.155,305,3.433,306,3.433,327,2.487,328,2.487,394,2.487,395,2.487,453,3.931,455,2.155,540,2.991,541,4.728,542,2.991,543,2.991,544,2.991,545,2.991,546,2.991,547,2.991,548,2.991,549,2.991,550,4.129,551,2.991,552,2.991,553,2.991,554,2.991,555,2.991,556,4.129,557,2.991,558,4.129,559,2.991,560,2.991,561,2.991,562,2.991,563,2.991,564,2.991,565,2.991,566,2.991,567,2.991,568,2.991,569,2.991,570,2.991,571,2.991,572,2.991,573,2.991,574,2.991,575,2.991,576,2.991,577,2.991]],["title/miscellaneous/functions.html",[578,1.692,579,3.157]],["body/miscellaneous/functions.html",[7,0.719,14,0.03,36,0.03,37,0.03,44,3.016,535,3.906,578,2.994,579,3.906,580,4.699]],["title/index.html",[7,0.406,581,2.656,582,2.656]],["body/index.html",[4,0.283,14,0.033,36,0.023,37,0.023,215,3.068,258,1.597,524,2.231,583,3.097,584,3.097,585,4.228,586,3.097,587,3.097,588,3.097,589,3.097,590,3.097,591,3.097,592,4.815,593,3.097,594,3.097,595,3.097,596,3.097,597,5.722,598,3.097,599,3.097,600,3.097,601,5.59,602,3.097,603,3.097,604,4.228,605,3.097,606,3.097,607,3.097,608,3.097,609,4.228,610,4.228,611,3.097,612,3.097,613,3.097,614,4.228,615,4.228,616,3.097,617,3.097,618,3.097,619,3.097,620,3.097,621,2.575,622,3.097,623,3.097,624,3.097,625,3.097,626,3.097,627,3.097,628,3.097,629,3.097,630,3.097,631,3.097,632,2.575,633,3.097,634,3.097,635,3.097,636,3.097,637,3.097,638,3.097,639,2.575]],["title/modules.html",[40,2.213]],["body/modules.html",[14,0.029,36,0.029,37,0.029,39,2.858,40,2.314,50,2.561,51,2.314,621,4.767,640,5.735,641,5.735,642,5.735]],["title/overview.html",[643,3.567]],["body/overview.html",[2,1.588,14,0.033,26,2.6,36,0.024,37,0.024,38,1.324,39,3.788,40,1.748,41,1.748,42,2.16,43,2.16,44,1.748,45,2.16,46,2.16,47,2.817,48,2.817,49,2.817,50,3.497,51,2.96,52,2.863,53,2.16,54,2.16,81,1.448,89,1.448,114,2.6,132,2.817,134,2.817,135,2.878,136,2.293,228,2.441,384,2.441,643,2.817,644,4.493,645,4.493]],["title/properties.html",[207,1.483,539,2.208]],["body/properties.html",[14,0.033,36,0.029,37,0.029,207,1.803,258,2.381,632,3.838,639,3.838,646,4.616,647,4.616,648,4.616]],["title/miscellaneous/variables.html",[578,1.692,649,3.157]],["body/miscellaneous/variables.html",[7,0.675,14,0.032,36,0.028,37,0.028,139,3.251,157,3.03,342,4.412,343,3.823,396,3.176,407,3.666,408,3.666,578,2.81,649,3.666,650,5.307]]],"invertedIndex":[["",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Auth.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LimitMiddleware.html":{},"injectables/LoggerMiddleware.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"interfaces/SessionData.html":{},"interfaces/SessionData-1.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/User-1.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":528,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":647,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":572,"title":{},"body":{"dependencies.html":{}}}],["0.14.1",{"_index":561,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":560,"title":{},"body":{"dependencies.html":{}}}],["0.7.0",{"_index":569,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":531,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":532,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":533,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":534,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":536,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":529,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":34,"title":{"interfaces/SessionData-1.html":{},"classes/User-1.html":{}},"body":{"controllers/AppController.html":{},"controllers/UsersController.html":{}}}],["1.1.4",{"_index":577,"title":{},"body":{"dependencies.html":{}}}],["1.11.0",{"_index":563,"title":{},"body":{"dependencies.html":{}}}],["1.18.0",{"_index":565,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":330,"title":{},"body":{"injectables/LimitMiddleware.html":{}}}],["10.0.0",{"_index":541,"title":{},"body":{"dependencies.html":{}}}],["10.0.2",{"_index":544,"title":{},"body":{"dependencies.html":{}}}],["10.0.3",{"_index":545,"title":{},"body":{"dependencies.html":{}}}],["10.2.0",{"_index":543,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":237,"title":{},"body":{"classes/CreateUserDto.html":{},"injectables/LimitMiddleware.html":{},"classes/RegisterDto.html":{}}}],["1000",{"_index":332,"title":{},"body":{"injectables/LimitMiddleware.html":{}}}],["10000",{"_index":235,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/RegisterDto.html":{}}}],["12345",{"_index":243,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["15",{"_index":333,"title":{},"body":{"injectables/LimitMiddleware.html":{}}}],["150",{"_index":218,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/RegisterDto.html":{}}}],["2",{"_index":228,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/RegisterDto.html":{},"overview.html":{}}}],["2.2.1",{"_index":540,"title":{},"body":{"dependencies.html":{}}}],["2.4.3",{"_index":554,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":426,"title":{},"body":{"controllers/UsersController.html":{}}}],["28",{"_index":216,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/RegisterDto.html":{}}}],["3",{"_index":644,"title":{},"body":{"overview.html":{}}}],["3.0.1",{"_index":558,"title":{},"body":{"dependencies.html":{}}}],["4.0.1",{"_index":550,"title":{},"body":{"dependencies.html":{}}}],["5.1.2",{"_index":548,"title":{},"body":{"dependencies.html":{}}}],["5.4.0",{"_index":555,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":363,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["6.2.0",{"_index":553,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":331,"title":{},"body":{"injectables/LimitMiddleware.html":{}}}],["60000",{"_index":477,"title":{},"body":{"controllers/UsersController.html":{}}}],["7",{"_index":645,"title":{},"body":{"overview.html":{}}}],["7.1.0",{"_index":567,"title":{},"body":{"dependencies.html":{}}}],["7.1.5",{"_index":564,"title":{},"body":{"dependencies.html":{}}}],["7.3.0",{"_index":547,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":574,"title":{},"body":{"dependencies.html":{}}}],["8.1.1",{"_index":568,"title":{},"body":{"dependencies.html":{}}}],["access_token:accesstoken,session:req.session",{"_index":205,"title":{},"body":{"injectables/AuthService.html":{}}}],["accesstoken",{"_index":196,"title":{},"body":{"injectables/AuthService.html":{}}}],["action",{"_index":521,"title":{},"body":{"injectables/UsersService.html":{}}}],["age",{"_index":208,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/RegisterDto.html":{},"classes/User.html":{}}}],["agent",{"_index":350,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["allusers",{"_index":481,"title":{},"body":{"controllers/UsersController.html":{}}}],["allusers,100000",{"_index":486,"title":{},"body":{"controllers/UsersController.html":{}}}],["already",{"_index":182,"title":{},"body":{"injectables/AuthService.html":{}}}],["amazing",{"_index":622,"title":{},"body":{"index.html":{}}}],["analytics",{"_index":551,"title":{},"body":{"dependencies.html":{}}}],["api",{"_index":101,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["apibearerauth",{"_index":447,"title":{},"body":{"controllers/UsersController.html":{}}}],["apibody",{"_index":448,"title":{},"body":{"controllers/UsersController.html":{}}}],["apiheader",{"_index":449,"title":{},"body":{"controllers/UsersController.html":{}}}],["apioperation",{"_index":118,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["apiparam",{"_index":450,"title":{},"body":{"controllers/UsersController.html":{}}}],["apiproperty",{"_index":245,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["apiresponse",{"_index":451,"title":{},"body":{"controllers/UsersController.html":{}}}],["apitags",{"_index":119,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["apitags(\"authorization",{"_index":123,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags(\"users",{"_index":457,"title":{},"body":{"controllers/UsersController.html":{}}}],["app",{"_index":599,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":591,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":39,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":26,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["assuming",{"_index":389,"title":{},"body":{"interfaces/SessionData-1.html":{}}}],["async",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["auth",{"_index":88,"title":{"classes/Auth.html":{}},"body":{"classes/Auth.html":{},"controllers/AuthController.html":{},"coverage.html":{}}}],["auth.controller",{"_index":138,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.guard",{"_index":446,"title":{},"body":{"controllers/UsersController.html":{}}}],["auth.guard.ts",{"_index":272,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["auth.guard.ts:11",{"_index":282,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.guard.ts:7",{"_index":279,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.service",{"_index":115,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/jwt",{"_index":271,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["authcontroller",{"_index":91,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":284,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard('jwt",{"_index":274,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authmodule",{"_index":50,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":632,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authorization",{"_index":423,"title":{},"body":{"controllers/UsersController.html":{}}}],["authservice",{"_index":114,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["authservice,usersservice,jwtstrategy",{"_index":151,"title":{},"body":{"modules/AuthModule.html":{}}}],["await",{"_index":173,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["backers",{"_index":623,"title":{},"body":{"index.html":{}}}],["based",{"_index":289,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["baseurl:${baseurl",{"_index":365,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["baseurl}=req",{"_index":347,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["bcrypt",{"_index":163,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.compare(logindto.password,user.password",{"_index":192,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.hash(registerdto.password,10",{"_index":185,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcryptjs",{"_index":164,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["body",{"_index":110,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["bootstrap",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":642,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":640,"title":{},"body":{"modules.html":{}}}],["building",{"_index":586,"title":{},"body":{"index.html":{}}}],["c",{"_index":480,"title":{},"body":{"controllers/UsersController.html":{}}}],["cache",{"_index":453,"title":{},"body":{"controllers/UsersController.html":{},"dependencies.html":{}}}],["cache_manager",{"_index":452,"title":{},"body":{"controllers/UsersController.html":{}}}],["cachemanager",{"_index":459,"title":{},"body":{"controllers/UsersController.html":{}}}],["cachemodule",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{}}}],["cachemodule.register",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{}}}],["canactivate",{"_index":275,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["canactivate(context",{"_index":277,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["certain",{"_index":290,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"controllers/UsersController.html":{}}}],["check",{"_index":479,"title":{},"body":{"controllers/UsersController.html":{}}}],["class",{"_index":29,"title":{"classes/Auth.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/User-1.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Auth.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LimitMiddleware.html":{},"injectables/LoggerMiddleware.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/User-1.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":89,"title":{},"body":{"classes/Auth.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/User-1.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":132,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":133,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":134,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":490,"title":{},"body":{"modules/UsersModule.html":{}}}],["cluster_usersmodule_providers",{"_index":491,"title":{},"body":{"modules/UsersModule.html":{}}}],["collection",{"_index":406,"title":{},"body":{"classes/User.html":{}}}],["conditions",{"_index":291,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["configure",{"_index":57,"title":{},"body":{"modules/AppModule.html":{}}}],["configure(consumer",{"_index":58,"title":{},"body":{"modules/AppModule.html":{}}}],["console.log(\"okook",{"_index":314,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["console.log(allusers",{"_index":483,"title":{},"body":{"controllers/UsersController.html":{}}}],["console.log(createuserdto",{"_index":511,"title":{},"body":{"injectables/UsersService.html":{}}}],["console.log(registerdto.email",{"_index":177,"title":{},"body":{"injectables/AuthService.html":{}}}],["const",{"_index":172,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LoggerMiddleware.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["constructor",{"_index":153,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{}}}],["constructor(@injectmodel(user.name",{"_index":170,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["constructor(private",{"_index":30,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["constructor(usermodel",{"_index":154,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["consumer",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["consumer.apply(loggermiddleware).forroutes",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["contentlenght",{"_index":355,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["contentlenght:${contentlenght",{"_index":367,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["context",{"_index":280,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":122,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('users",{"_index":456,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["coverage",{"_index":524,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":107,"title":{},"body":{"controllers/AuthController.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["create(createuserdto",{"_index":503,"title":{},"body":{"injectables/UsersService.html":{}}}],["createduser",{"_index":512,"title":{},"body":{"injectables/UsersService.html":{}}}],["createduser.save",{"_index":514,"title":{},"body":{"injectables/UsersService.html":{}}}],["createuser",{"_index":412,"title":{},"body":{"controllers/UsersController.html":{}}}],["createuser(@body",{"_index":471,"title":{},"body":{"controllers/UsersController.html":{}}}],["createuser(createuserdto",{"_index":416,"title":{},"body":{"controllers/UsersController.html":{}}}],["createuserdto",{"_index":165,"title":{"classes/CreateUserDto.html":{}},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["createuserdto):promise",{"_index":472,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["createuserdto})@apibearerauth()@apioperation({summary",{"_index":438,"title":{},"body":{"controllers/UsersController.html":{}}}],["createuserdto})@apiparam({name",{"_index":429,"title":{},"body":{"controllers/UsersController.html":{}}}],["csrf",{"_index":576,"title":{},"body":{"dependencies.html":{}}}],["csurf",{"_index":562,"title":{},"body":{"dependencies.html":{}}}],["data",{"_index":427,"title":{},"body":{"controllers/UsersController.html":{}}}],["database",{"_index":234,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/RegisterDto.html":{}}}],["db",{"_index":233,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/RegisterDto.html":{}}}],["declarations",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["declare",{"_index":387,"title":{},"body":{"interfaces/SessionData.html":{},"interfaces/SessionData-1.html":{}}}],["decorators",{"_index":13,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{}}}],["default",{"_index":342,"title":{},"body":{"injectables/LoggerMiddleware.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LimitMiddleware.html":{},"injectables/LoggerMiddleware.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["delete",{"_index":113,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["delete(':id",{"_index":487,"title":{},"body":{"controllers/UsersController.html":{}}}],["delete(':id')@apioperation({summary",{"_index":434,"title":{},"body":{"controllers/UsersController.html":{}}}],["dependencies",{"_index":41,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":258,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"controllers/UsersController.html":{},"index.html":{},"properties.html":{}}}],["description:\"id",{"_index":254,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/RegisterDto.html":{},"controllers/UsersController.html":{}}}],["development",{"_index":600,"title":{},"body":{"index.html":{}}}],["dif",{"_index":358,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["dif[0]*1e3",{"_index":361,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["dif[1]*1e",{"_index":362,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["document",{"_index":405,"title":{},"body":{"classes/User.html":{}}}],["documentation",{"_index":525,"title":{},"body":{"coverage.html":{}}}],["dto/create",{"_index":444,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dto/login.dto",{"_index":117,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/SessionData-1.html":{}}}],["dto/register.dto",{"_index":116,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/update",{"_index":445,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["e2e",{"_index":611,"title":{},"body":{"index.html":{}}}],["each",{"_index":335,"title":{},"body":{"injectables/LimitMiddleware.html":{}}}],["efficient",{"_index":587,"title":{},"body":{"index.html":{}}}],["email",{"_index":200,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/User.html":{}}}],["err",{"_index":283,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["error",{"_index":288,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["example",{"_index":215,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"index.html":{}}}],["example:\"12345",{"_index":268,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["example:\"saeedi",{"_index":264,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/RegisterDto.html":{}}}],["example:\"ssuorena@gmail.com",{"_index":259,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["example:\"suorena",{"_index":262,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/RegisterDto.html":{}}}],["example:150",{"_index":257,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/RegisterDto.html":{}}}],["example:28",{"_index":266,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/RegisterDto.html":{}}}],["exec",{"_index":176,"title":{},"body":{"injectables/AuthService.html":{}}}],["executioncontext",{"_index":278,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["exist\",400",{"_index":183,"title":{},"body":{"injectables/AuthService.html":{}}}],["export",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Auth.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LimitMiddleware.html":{},"injectables/LoggerMiddleware.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/User-1.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":121,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/LimitMiddleware.html":{},"injectables/LoggerMiddleware.html":{},"interfaces/SessionData.html":{},"interfaces/SessionData-1.html":{},"dependencies.html":{}}}],["extends",{"_index":273,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["extractjwt",{"_index":304,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":309,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["false",{"_index":311,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Auth.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LimitMiddleware.html":{},"injectables/LoggerMiddleware.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"interfaces/SessionData.html":{},"interfaces/SessionData-1.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/User-1.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["find",{"_index":413,"title":{},"body":{"controllers/UsersController.html":{}}}],["find(@param('id",{"_index":467,"title":{},"body":{"controllers/UsersController.html":{}}}],["find(id",{"_index":421,"title":{},"body":{"controllers/UsersController.html":{}}}],["findall",{"_index":499,"title":{},"body":{"injectables/UsersService.html":{}}}],["findone",{"_index":500,"title":{},"body":{"injectables/UsersService.html":{}}}],["findone(id",{"_index":506,"title":{},"body":{"injectables/UsersService.html":{}}}],["first",{"_index":225,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/RegisterDto.html":{}}}],["first_name",{"_index":209,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/RegisterDto.html":{},"classes/User.html":{}}}],["format",{"_index":222,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["format:\"email",{"_index":260,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["found\",404",{"_index":190,"title":{},"body":{"injectables/AuthService.html":{}}}],["found`,404",{"_index":520,"title":{},"body":{"injectables/UsersService.html":{}}}],["framework",{"_index":585,"title":{},"body":{"index.html":{}}}],["function",{"_index":324,"title":{},"body":{"injectables/LimitMiddleware.html":{},"injectables/LoggerMiddleware.html":{},"coverage.html":{}}}],["functions",{"_index":579,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get(':id",{"_index":460,"title":{},"body":{"controllers/UsersController.html":{}}}],["get(':id')@useguards(jwtauthguard)@apiheader({name",{"_index":422,"title":{},"body":{"controllers/UsersController.html":{}}}],["get()@useguards(throttlerguard)@apiheader({name",{"_index":436,"title":{},"body":{"controllers/UsersController.html":{}}}],["getauthsession",{"_index":10,"title":{},"body":{"controllers/AppController.html":{}}}],["getauthsession(@session",{"_index":32,"title":{},"body":{"controllers/AppController.html":{}}}],["getauthsession(session",{"_index":11,"title":{},"body":{"controllers/AppController.html":{}}}],["gethello",{"_index":83,"title":{},"body":{"injectables/AppService.html":{}}}],["getting",{"_index":581,"title":{"index.html":{}},"body":{}}],["grow",{"_index":618,"title":{},"body":{"index.html":{}}}],["handlerequest",{"_index":276,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["handlerequest(err",{"_index":281,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["hello",{"_index":86,"title":{},"body":{"injectables/AppService.html":{}}}],["helmet",{"_index":566,"title":{},"body":{"dependencies.html":{}}}],["here",{"_index":629,"title":{},"body":{"index.html":{}}}],["httpexception",{"_index":160,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["httpexception(\"password",{"_index":194,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpexception(\"user",{"_index":181,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpexception(`user",{"_index":519,"title":{},"body":{"injectables/UsersService.html":{}}}],["https://nestjs.com",{"_index":636,"title":{},"body":{"index.html":{}}}],["id",{"_index":210,"title":{},"body":{"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/RegisterDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["identifier",{"_index":526,"title":{},"body":{"coverage.html":{}}}],["if(!ispasswordmatch",{"_index":193,"title":{},"body":{"injectables/AuthService.html":{}}}],["if(!result",{"_index":518,"title":{},"body":{"injectables/UsersService.html":{}}}],["if(!user",{"_index":189,"title":{},"body":{"injectables/AuthService.html":{}}}],["if(user",{"_index":178,"title":{},"body":{"injectables/AuthService.html":{}}}],["ignoreexpiration",{"_index":310,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["implements",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"injectables/LimitMiddleware.html":{},"injectables/LoggerMiddleware.html":{}}}],["import",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LimitMiddleware.html":{},"injectables/LoggerMiddleware.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"interfaces/SessionData.html":{},"interfaces/SessionData-1.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["imports:[mongoosemodule.forfeature",{"_index":145,"title":{},"body":{"modules/AuthModule.html":{},"modules/UsersModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LimitMiddleware.html":{},"injectables/LoggerMiddleware.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"interfaces/SessionData.html":{},"interfaces/SessionData-1.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Auth.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LimitMiddleware.html":{},"injectables/LoggerMiddleware.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"interfaces/SessionData.html":{},"interfaces/SessionData-1.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/User-1.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["information",{"_index":204,"title":{},"body":{"injectables/AuthService.html":{}}}],["inject",{"_index":442,"title":{},"body":{"controllers/UsersController.html":{}}}],["inject(cache_manager",{"_index":458,"title":{},"body":{"controllers/UsersController.html":{}}}],["injectable",{"_index":80,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LimitMiddleware.html":{},"injectables/LoggerMiddleware.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LimitMiddleware.html":{},"injectables/LoggerMiddleware.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":81,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LimitMiddleware.html":{},"injectables/LoggerMiddleware.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injectmodel",{"_index":162,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["installation",{"_index":596,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":598,"title":{},"body":{"index.html":{}}}],["interface",{"_index":382,"title":{"interfaces/SessionData.html":{},"interfaces/SessionData-1.html":{}},"body":{"interfaces/SessionData.html":{},"interfaces/SessionData-1.html":{},"coverage.html":{}}}],["interfaces",{"_index":384,"title":{},"body":{"interfaces/SessionData.html":{},"interfaces/SessionData-1.html":{},"overview.html":{}}}],["ip",{"_index":336,"title":{},"body":{"injectables/LimitMiddleware.html":{},"injectables/LoggerMiddleware.html":{}}}],["ip:${ip",{"_index":370,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["isemail",{"_index":246,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["isemail()@apiproperty({description",{"_index":372,"title":{},"body":{"classes/LoginDto.html":{}}}],["isnotempty",{"_index":247,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["isnotempty()@isstring()@apiproperty({description",{"_index":242,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["isnotempty()@isstring()@minlength(2)@apiproperty({description",{"_index":224,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/RegisterDto.html":{}}}],["isnumber",{"_index":248,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/RegisterDto.html":{}}}],["isnumber()@isnotempty()@apiproperty({description",{"_index":230,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/RegisterDto.html":{}}}],["isnumber()@isoptional()@max(150)@apiproperty({description",{"_index":214,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/RegisterDto.html":{}}}],["isoptional",{"_index":249,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/RegisterDto.html":{}}}],["ispasswordmatch",{"_index":191,"title":{},"body":{"injectables/AuthService.html":{}}}],["isstring",{"_index":250,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["isstring()@isnotempty()@isemail()@apiproperty({description",{"_index":220,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/RegisterDto.html":{}}}],["join",{"_index":625,"title":{},"body":{"index.html":{}}}],["jwt",{"_index":306,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwtauthguard",{"_index":269,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"injectables/JwtAuthGuard.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["jwtfromrequest",{"_index":308,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["jwtmodule.register",{"_index":148,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":143,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":135,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":633,"title":{},"body":{"index.html":{}}}],["last",{"_index":239,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/RegisterDto.html":{}}}],["last_name",{"_index":211,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/RegisterDto.html":{},"classes/User.html":{}}}],["legend",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["length",{"_index":357,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["license",{"_index":639,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":615,"title":{},"body":{"index.html":{}}}],["limit",{"_index":328,"title":{},"body":{"injectables/LimitMiddleware.html":{},"dependencies.html":{}}}],["limit:10",{"_index":497,"title":{},"body":{"modules/UsersModule.html":{}}}],["limitmiddleware",{"_index":317,"title":{"injectables/LimitMiddleware.html":{}},"body":{"injectables/LimitMiddleware.html":{},"coverage.html":{}}}],["logger",{"_index":340,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["logger('http",{"_index":344,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["logger/logger.middleware",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["loggermiddleware",{"_index":68,"title":{"injectables/LoggerMiddleware.html":{}},"body":{"modules/AppModule.html":{},"injectables/LoggerMiddleware.html":{},"coverage.html":{}}}],["login",{"_index":94,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["login(@body",{"_index":129,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(logindto",{"_index":96,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["logindto",{"_index":97,"title":{"classes/LoginDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginDto.html":{},"interfaces/SessionData-1.html":{},"coverage.html":{}}}],["logindto.email",{"_index":188,"title":{},"body":{"injectables/AuthService.html":{}}}],["manager",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["matching",{"_index":37,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Auth.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LimitMiddleware.html":{},"injectables/LoggerMiddleware.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"interfaces/SessionData.html":{},"interfaces/SessionData-1.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/User-1.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":251,"title":{},"body":{"classes/CreateUserDto.html":{},"injectables/LimitMiddleware.html":{},"classes/RegisterDto.html":{}}}],["max(150",{"_index":265,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/RegisterDto.html":{}}}],["maximum",{"_index":217,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/RegisterDto.html":{}}}],["maximum:10000",{"_index":255,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/RegisterDto.html":{}}}],["maximum:150",{"_index":267,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/RegisterDto.html":{}}}],["maxlength",{"_index":252,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/RegisterDto.html":{}}}],["metadata",{"_index":571,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":346,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LimitMiddleware.html":{},"injectables/LoggerMiddleware.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["middlewareconsumer",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["milliseconds",{"_index":475,"title":{},"body":{"controllers/UsersController.html":{}}}],["minimum",{"_index":236,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/RegisterDto.html":{}}}],["minimum:100",{"_index":256,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/RegisterDto.html":{}}}],["minlength",{"_index":227,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/RegisterDto.html":{}}}],["minlength(2",{"_index":261,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/RegisterDto.html":{}}}],["minlength:2",{"_index":263,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/RegisterDto.html":{}}}],["minute",{"_index":476,"title":{},"body":{"controllers/UsersController.html":{}}}],["minutes",{"_index":334,"title":{},"body":{"injectables/LimitMiddleware.html":{}}}],["miscellaneous",{"_index":578,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":614,"title":{},"body":{"index.html":{}}}],["mode",{"_index":604,"title":{},"body":{"index.html":{}}}],["model",{"_index":155,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/SessionData-1.html":{},"injectables/UsersService.html":{}}}],["module",{"_index":38,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"interfaces/SessionData.html":{},"interfaces/SessionData-1.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["modules",{"_index":40,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["mongo",{"_index":232,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/RegisterDto.html":{}}}],["mongoose",{"_index":161,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["mongoose.model('user",{"_index":408,"title":{},"body":{"classes/User.html":{},"miscellaneous/variables.html":{}}}],["mongoosemodule",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forroot('*****",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["more",{"_index":628,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":634,"title":{},"body":{"index.html":{}}}],["name",{"_index":18,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LimitMiddleware.html":{},"injectables/LoggerMiddleware.html":{},"classes/RegisterDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["name:\"authorization",{"_index":462,"title":{},"body":{"controllers/UsersController.html":{}}}],["name:\"id",{"_index":466,"title":{},"body":{"controllers/UsersController.html":{}}}],["name:user.name",{"_index":146,"title":{},"body":{"modules/AuthModule.html":{},"modules/UsersModule.html":{}}}],["nest",{"_index":592,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":638,"title":{},"body":{"index.html":{}}}],["nestjs/cache",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":25,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LimitMiddleware.html":{},"injectables/LoggerMiddleware.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":542,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":394,"title":{},"body":{"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":285,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":546,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":120,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["nestjs/throttler",{"_index":455,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["nestmiddleware",{"_index":325,"title":{},"body":{"injectables/LimitMiddleware.html":{},"injectables/LoggerMiddleware.html":{}}}],["nestmodule",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["new",{"_index":180,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LoggerMiddleware.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["next",{"_index":322,"title":{},"body":{"injectables/LimitMiddleware.html":{},"injectables/LoggerMiddleware.html":{}}}],["next/dist/build/templates/app",{"_index":301,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["node",{"_index":552,"title":{},"body":{"dependencies.html":{}}}],["node.js",{"_index":584,"title":{},"body":{"index.html":{}}}],["now",{"_index":474,"title":{},"body":{"controllers/UsersController.html":{}}}],["npm",{"_index":597,"title":{},"body":{"index.html":{}}}],["number",{"_index":213,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/RegisterDto.html":{},"interfaces/SessionData.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["open",{"_index":616,"title":{},"body":{"index.html":{}}}],["optional",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LimitMiddleware.html":{},"injectables/LoggerMiddleware.html":{},"interfaces/SessionData.html":{},"interfaces/SessionData-1.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["out",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["overview",{"_index":643,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":539,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":302,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["param",{"_index":112,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["parameters",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LimitMiddleware.html":{},"injectables/LoggerMiddleware.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["partialtype",{"_index":393,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["partialtype(createuserdto",{"_index":392,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["passport",{"_index":305,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportstrategy",{"_index":299,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":293,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":212,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/User.html":{}}}],["patch",{"_index":111,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["payload",{"_index":298,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.email",{"_index":316,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.sub",{"_index":315,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["per",{"_index":338,"title":{},"body":{"injectables/LimitMiddleware.html":{}}}],["please",{"_index":626,"title":{},"body":{"index.html":{}}}],["post",{"_index":109,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["post('login",{"_index":128,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('login')@apioperation({summary",{"_index":100,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('register",{"_index":124,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('register')@apioperation({summary",{"_index":106,"title":{},"body":{"controllers/AuthController.html":{}}}],["post()@apioperation({summary",{"_index":417,"title":{},"body":{"controllers/UsersController.html":{}}}],["prefix",{"_index":93,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["private",{"_index":171,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LoggerMiddleware.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["process.hrtime",{"_index":352,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["process.hrtime(startat",{"_index":359,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["production",{"_index":606,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":583,"title":{},"body":{"index.html":{}}}],["project",{"_index":617,"title":{},"body":{"index.html":{}}}],["promise",{"_index":420,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["prop",{"_index":397,"title":{},"body":{"classes/User.html":{}}}],["properly",{"_index":428,"title":{},"body":{"controllers/UsersController.html":{}}}],["properly\",type:createuserdto",{"_index":465,"title":{},"body":{"controllers/UsersController.html":{}}}],["properties",{"_index":207,"title":{"properties.html":{}},"body":{"classes/CreateUserDto.html":{},"injectables/LoggerMiddleware.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"interfaces/SessionData.html":{},"interfaces/SessionData-1.html":{},"classes/User.html":{},"properties.html":{}}}],["providers",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["rate",{"_index":327,"title":{},"body":{"injectables/LimitMiddleware.html":{},"dependencies.html":{}}}],["ratelimit",{"_index":326,"title":{},"body":{"injectables/LimitMiddleware.html":{}}}],["read",{"_index":627,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":31,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["record",{"_index":12,"title":{},"body":{"controllers/AppController.html":{}}}],["redis",{"_index":556,"title":{},"body":{"dependencies.html":{}}}],["reflect",{"_index":570,"title":{},"body":{"dependencies.html":{}}}],["register",{"_index":95,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["register(@body",{"_index":126,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(registerdto",{"_index":104,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["registerdto",{"_index":105,"title":{"classes/RegisterDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/RegisterDto.html":{},"coverage.html":{}}}],["registerdto.email",{"_index":175,"title":{},"body":{"injectables/AuthService.html":{}}}],["registerdto.password",{"_index":184,"title":{},"body":{"injectables/AuthService.html":{}}}],["remove",{"_index":414,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["remove(@param('id",{"_index":488,"title":{},"body":{"controllers/UsersController.html":{}}}],["remove(id",{"_index":433,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["removes",{"_index":523,"title":{},"body":{"injectables/UsersService.html":{}}}],["repository",{"_index":595,"title":{},"body":{"index.html":{}}}],["req",{"_index":98,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/LimitMiddleware.html":{},"injectables/LoggerMiddleware.html":{}}}],["req.get('user",{"_index":349,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["req.session.user",{"_index":202,"title":{},"body":{"injectables/AuthService.html":{}}}],["req:request",{"_index":130,"title":{},"body":{"controllers/AuthController.html":{}}}],["request",{"_index":99,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/LoggerMiddleware.html":{}}}],["requests",{"_index":337,"title":{},"body":{"injectables/LimitMiddleware.html":{}}}],["res",{"_index":321,"title":{},"body":{"injectables/LimitMiddleware.html":{},"injectables/LoggerMiddleware.html":{}}}],["res.get('content",{"_index":356,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["res.on('finish",{"_index":353,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["reset",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["response",{"_index":168,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LoggerMiddleware.html":{}}}],["responsetime",{"_index":360,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["responsetime:${responsetime}ms",{"_index":368,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["result",{"_index":515,"title":{},"body":{"injectables/UsersService.html":{}}}],["results",{"_index":36,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Auth.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LimitMiddleware.html":{},"injectables/LoggerMiddleware.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"interfaces/SessionData.html":{},"interfaces/SessionData-1.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/User-1.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["retun",{"_index":431,"title":{},"body":{"controllers/UsersController.html":{}}}],["return",{"_index":35,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["returns",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LimitMiddleware.html":{},"injectables/LoggerMiddleware.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["run",{"_index":601,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":573,"title":{},"body":{"dependencies.html":{}}}],["saeedi",{"_index":240,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/RegisterDto.html":{}}}],["save",{"_index":203,"title":{},"body":{"injectables/AuthService.html":{}}}],["scalable",{"_index":588,"title":{},"body":{"index.html":{}}}],["schema",{"_index":147,"title":{},"body":{"modules/AuthModule.html":{},"classes/User.html":{},"modules/UsersModule.html":{}}}],["schemafactory",{"_index":404,"title":{},"body":{"classes/User.html":{}}}],["schemafactory.createforclass(user",{"_index":407,"title":{},"body":{"classes/User.html":{},"miscellaneous/variables.html":{}}}],["secret2",{"_index":313,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["secret:'secret2",{"_index":149,"title":{},"body":{"modules/AuthModule.html":{}}}],["secretorkey",{"_index":312,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["send",{"_index":424,"title":{},"body":{"controllers/UsersController.html":{}}}],["server",{"_index":589,"title":{},"body":{"index.html":{}}}],["session",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"interfaces/SessionData.html":{},"interfaces/SessionData-1.html":{},"dependencies.html":{}}}],["session.visit",{"_index":33,"title":{},"body":{"controllers/AppController.html":{}}}],["sessiondata",{"_index":383,"title":{"interfaces/SessionData.html":{},"interfaces/SessionData-1.html":{}},"body":{"interfaces/SessionData.html":{},"interfaces/SessionData-1.html":{},"coverage.html":{}}}],["side",{"_index":590,"title":{},"body":{"index.html":{}}}],["signoptions:{expiresin:'1d",{"_index":150,"title":{},"body":{"modules/AuthModule.html":{}}}],["simpleget",{"_index":415,"title":{},"body":{"controllers/UsersController.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Auth.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LimitMiddleware.html":{},"injectables/LoggerMiddleware.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"interfaces/SessionData.html":{},"interfaces/SessionData-1.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/User-1.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["sponsors",{"_index":620,"title":{},"body":{"index.html":{}}}],["src/.../main.ts",{"_index":580,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../natinalteammodel.ts",{"_index":650,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":16,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":55,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.module.ts:26",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":82,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":84,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":92,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:15",{"_index":108,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:21",{"_index":103,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":137,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":152,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:18",{"_index":156,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:25",{"_index":159,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:39",{"_index":158,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/dto/login.dto.ts",{"_index":371,"title":{},"body":{"classes/LoginDto.html":{},"coverage.html":{}}}],["src/auth/dto/login.dto.ts:11",{"_index":373,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/dto/login.dto.ts:20",{"_index":374,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/dto/register.dto.ts",{"_index":375,"title":{},"body":{"classes/RegisterDto.html":{},"coverage.html":{}}}],["src/auth/dto/register.dto.ts:14",{"_index":379,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/auth/dto/register.dto.ts:23",{"_index":377,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/auth/dto/register.dto.ts:32",{"_index":378,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/auth/dto/register.dto.ts:41",{"_index":380,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/auth/dto/register.dto.ts:52",{"_index":376,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/auth/dto/register.dto.ts:60",{"_index":381,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/auth/entities/auth.entity.ts",{"_index":90,"title":{},"body":{"classes/Auth.html":{},"coverage.html":{}}}],["src/auth/session.user.ts",{"_index":388,"title":{},"body":{"interfaces/SessionData-1.html":{},"coverage.html":{}}}],["src/auth/strategy/jwt.strategy.ts",{"_index":292,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/strategy/jwt.strategy.ts:19",{"_index":297,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/strategy/jwt.strategy.ts:9",{"_index":295,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/jwt",{"_index":270,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["src/limit/limit.middleware.ts",{"_index":318,"title":{},"body":{"injectables/LimitMiddleware.html":{},"coverage.html":{}}}],["src/limit/limit.middleware.ts:5",{"_index":323,"title":{},"body":{"injectables/LimitMiddleware.html":{}}}],["src/logger/logger.middleware.ts",{"_index":339,"title":{},"body":{"injectables/LoggerMiddleware.html":{},"coverage.html":{}}}],["src/logger/logger.middleware.ts:6",{"_index":345,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["src/logger/logger.middleware.ts:7",{"_index":341,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["src/main.ts",{"_index":535,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/natinalteammodel",{"_index":140,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["src/natinalteammodel.ts",{"_index":396,"title":{},"body":{"classes/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/natinalteammodel.ts:40",{"_index":401,"title":{},"body":{"classes/User.html":{}}}],["src/natinalteammodel.ts:43",{"_index":399,"title":{},"body":{"classes/User.html":{}}}],["src/natinalteammodel.ts:46",{"_index":400,"title":{},"body":{"classes/User.html":{}}}],["src/natinalteammodel.ts:49",{"_index":402,"title":{},"body":{"classes/User.html":{}}}],["src/natinalteammodel.ts:52",{"_index":398,"title":{},"body":{"classes/User.html":{}}}],["src/natinalteammodel.ts:55",{"_index":403,"title":{},"body":{"classes/User.html":{}}}],["src/session.visit.ts",{"_index":385,"title":{},"body":{"interfaces/SessionData.html":{},"coverage.html":{}}}],["src/users/dto/create",{"_index":166,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/users/dto/update",{"_index":391,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/users/entities/user.entity.ts",{"_index":409,"title":{},"body":{"classes/User-1.html":{},"coverage.html":{}}}],["src/users/users.controller.ts",{"_index":411,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:35",{"_index":432,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:45",{"_index":419,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:62",{"_index":439,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:84",{"_index":435,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.module",{"_index":141,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/users/users.module.ts",{"_index":492,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.service",{"_index":142,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["src/users/users.service.ts",{"_index":498,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/users.service.ts:10",{"_index":502,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:12",{"_index":504,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:19",{"_index":505,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:24",{"_index":507,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:33",{"_index":510,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:37",{"_index":508,"title":{},"body":{"injectables/UsersService.html":{}}}],["ssuorena@gmail.com",{"_index":221,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["start",{"_index":602,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":605,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":607,"title":{},"body":{"index.html":{}}}],["startat",{"_index":351,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["started",{"_index":582,"title":{"index.html":{}},"body":{}}],["starter",{"_index":594,"title":{},"body":{"index.html":{}}}],["statements",{"_index":527,"title":{},"body":{"coverage.html":{}}}],["status:200,description:\"data",{"_index":464,"title":{},"body":{"controllers/UsersController.html":{}}}],["statuscode",{"_index":354,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["statuscode:${statuscode",{"_index":366,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["stay",{"_index":630,"title":{},"body":{"index.html":{}}}],["store",{"_index":557,"title":{},"body":{"dependencies.html":{}}}],["strategy",{"_index":303,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["strategy/jwt.strategy",{"_index":144,"title":{},"body":{"modules/AuthModule.html":{}}}],["string",{"_index":85,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["sub",{"_index":198,"title":{},"body":{"injectables/AuthService.html":{}}}],["summary",{"_index":125,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["suorena",{"_index":226,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/RegisterDto.html":{}}}],["super",{"_index":307,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["super.canactivate(context",{"_index":287,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["support",{"_index":621,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":641,"title":{},"body":{"modules.html":{}}}],["table",{"_index":538,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":537,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":610,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":613,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":612,"title":{},"body":{"index.html":{}}}],["tests",{"_index":609,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":619,"title":{},"body":{"index.html":{}}}],["this.authservice.login(logindto,req",{"_index":131,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.register(registerdto",{"_index":127,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.cachemanager.get('users",{"_index":482,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.cachemanager.set('users",{"_index":485,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.jwtservice.sign",{"_index":197,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logger.log",{"_index":364,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["this.usermodel(createuserdto",{"_index":513,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.find().exec",{"_index":516,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.findone",{"_index":517,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.findone({\"email",{"_index":174,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usermodel.findone({email",{"_index":187,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.create(createuserdto",{"_index":473,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.create(registerdto",{"_index":186,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.findall",{"_index":484,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findone(id",{"_index":468,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.remove(+id",{"_index":489,"title":{},"body":{"controllers/UsersController.html":{}}}],["throttlerguard",{"_index":454,"title":{},"body":{"controllers/UsersController.html":{}}}],["throttlermodule",{"_index":494,"title":{},"body":{"modules/UsersModule.html":{}}}],["throttlermodule.forroot",{"_index":495,"title":{},"body":{"modules/UsersModule.html":{}}}],["throw",{"_index":179,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/UsersService.html":{}}}],["tiny",{"_index":575,"title":{},"body":{"dependencies.html":{}}}],["token",{"_index":463,"title":{},"body":{"controllers/UsersController.html":{}}}],["token'})@apibearerauth()@apiresponse({status",{"_index":425,"title":{},"body":{"controllers/UsersController.html":{}}}],["token'})@apiresponse({status",{"_index":437,"title":{},"body":{"controllers/UsersController.html":{}}}],["touch",{"_index":631,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":559,"title":{},"body":{"dependencies.html":{}}}],["tree",{"_index":300,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["ttl:5*60*1000",{"_index":496,"title":{},"body":{"modules/UsersModule.html":{}}}],["twitter",{"_index":637,"title":{},"body":{"index.html":{}}}],["type",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LimitMiddleware.html":{},"injectables/LoggerMiddleware.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"interfaces/SessionData.html":{},"interfaces/SessionData-1.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["type:createuserdto",{"_index":470,"title":{},"body":{"controllers/UsersController.html":{}}}],["types",{"_index":395,"title":{},"body":{"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["types/passport",{"_index":549,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":593,"title":{},"body":{"index.html":{}}}],["unauthorizedexception",{"_index":286,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["unit",{"_index":608,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/UsersController.html":{}}}],["unlicensed",{"_index":648,"title":{},"body":{"properties.html":{}}}],["update",{"_index":501,"title":{},"body":{"injectables/UsersService.html":{}}}],["update(id",{"_index":509,"title":{},"body":{"injectables/UsersService.html":{}}}],["updates",{"_index":522,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateuserdto",{"_index":390,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["use",{"_index":319,"title":{},"body":{"injectables/LimitMiddleware.html":{},"injectables/LoggerMiddleware.html":{}}}],["use(req",{"_index":320,"title":{},"body":{"injectables/LimitMiddleware.html":{},"injectables/LoggerMiddleware.html":{}}}],["useguards",{"_index":440,"title":{},"body":{"controllers/UsersController.html":{}}}],["useguards(jwtauthguard",{"_index":461,"title":{},"body":{"controllers/UsersController.html":{}}}],["useguards(jwtstrategy",{"_index":469,"title":{},"body":{"controllers/UsersController.html":{}}}],["useguards(throttlerguard",{"_index":478,"title":{},"body":{"controllers/UsersController.html":{}}}],["useinterceptors",{"_index":441,"title":{},"body":{"controllers/UsersController.html":{}}}],["user",{"_index":102,"title":{"classes/User.html":{},"classes/User-1.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/JwtAuthGuard.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"interfaces/SessionData-1.html":{},"classes/User.html":{},"classes/User-1.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["user'})@apibody({type",{"_index":418,"title":{},"body":{"controllers/UsersController.html":{}}}],["user'})@apioperation({summary",{"_index":430,"title":{},"body":{"controllers/UsersController.html":{}}}],["user.dto",{"_index":167,"title":{},"body":{"injectables/AuthService.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["user.dto.ts",{"_index":206,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:14",{"_index":238,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:23",{"_index":223,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:32",{"_index":229,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:41",{"_index":241,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:52",{"_index":219,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:60",{"_index":244,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.email",{"_index":201,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.id",{"_index":199,"title":{},"body":{"injectables/AuthService.html":{}}}],["useragent",{"_index":348,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["useragent:${useragent",{"_index":369,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["usermodel",{"_index":157,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["users",{"_index":231,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/RegisterDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{}}}],["users.controller",{"_index":493,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.service",{"_index":443,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["users/users.module",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["userschema",{"_index":139,"title":{},"body":{"modules/AuthModule.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userscontroller",{"_index":410,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["usersmodule",{"_index":51,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":136,"title":{"injectables/UsersService.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["validate",{"_index":294,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(payload",{"_index":296,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validator",{"_index":253,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"dependencies.html":{}}}],["value",{"_index":343,"title":{},"body":{"injectables/LoggerMiddleware.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":530,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":649,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":646,"title":{},"body":{"properties.html":{}}}],["visit",{"_index":386,"title":{},"body":{"interfaces/SessionData.html":{}}}],["void",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"injectables/LimitMiddleware.html":{},"injectables/LoggerMiddleware.html":{}}}],["watch",{"_index":603,"title":{},"body":{"index.html":{}}}],["website",{"_index":635,"title":{},"body":{"index.html":{}}}],["windowms",{"_index":329,"title":{},"body":{"injectables/LimitMiddleware.html":{}}}],["world",{"_index":87,"title":{},"body":{"injectables/AppService.html":{}}}],["wrong\",400",{"_index":195,"title":{},"body":{"injectables/AuthService.html":{}}}],["x",{"_index":169,"title":{},"body":{"injectables/AuthService.html":{}}}],["you'd",{"_index":624,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                getAuthsession\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getAuthsession\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAuthsession(session: Record)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                session\n                                            \n                                                        Record\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Session } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  async getAuthsession(@Session() session: Record){\n    session.visit = session.visit ? session.visit + 1 : 1;\n    return session\n\n  }\n    \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configure\n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.module.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                consumer\n                                            \n                                                        MiddlewareConsumer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        import { Module , NestModule, MiddlewareConsumer } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { UsersModule } from './users/users.module';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { LoggerMiddleware } from './logger/logger.middleware';\nimport { AuthModule } from './auth/auth.module';\nimport { JwtModule } from '@nestjs/jwt';\nimport { CacheModule } from '@nestjs/cache-manager';\n\n\n\n@Module({\n  imports: [MongooseModule.forRoot('******************'),\n  UsersModule,\n  AuthModule,\n  CacheModule.register(),\n],\n\n  controllers: [AppController],\n\n  providers: [AppService],\n})\n\nexport class AppModule implements NestModule{\n  configure(consumer: MiddlewareConsumer) {\n    consumer.apply(LoggerMiddleware).forRoutes('*')\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Auth.html":{"url":"classes/Auth.html","title":"class - Auth","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Auth\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/entities/auth.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Auth {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                login\n                            \n                            \n                                    \n                                    \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(LoginDto: LoginDto, req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('login')@ApiOperation({summary: 'This API if for user login'})\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                LoginDto\n                                            \n                                                            LoginDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(registerDto: RegisterDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('register')@ApiOperation({summary: 'This API create user'})\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                registerDto\n                                            \n                                                            RegisterDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete ,Req} from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { RegisterDto } from './dto/register.dto';\nimport { LoginDto } from './dto/login.dto';\nimport { ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { Request } from 'express';\n\n@Controller('auth')\n@ApiTags(\"Authorization\")\nexport class AuthController {\n  constructor(private readonly authService: AuthService) {}\n\n  @Post('register')\n  @ApiOperation({ summary: 'This API create user' })\n  register(@Body() registerDto: RegisterDto ) {\n    return this.authService.register(registerDto);\n  }\n\n  @Post('login')\n  @ApiOperation({ summary: 'This API if for user login' })\n  login(@Body() LoginDto: LoginDto,  @Req() req:Request) {\n    return this.authService.login(LoginDto,req);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nAuthModule -->\n\nUsersService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { AuthController } from './auth.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { User, UserSchema } from 'src/NatinalteamModel';\nimport { UsersModule } from 'src/users/users.module';\nimport { UsersService } from 'src/users/users.service';\nimport { JwtService , JwtModule } from '@nestjs/jwt';\nimport { JwtStrategy } from './strategy/jwt.strategy';\n\n\n\n\n@Module({\n  imports:[MongooseModule.forFeature([{ name:User.name, schema: UserSchema }]),\n  UsersModule,\n  JwtModule.register({\n    secret:'secret2',\n    signOptions:{expiresIn:'1d'}\n  }),],\n  controllers: [AuthController],\n  providers: [AuthService,UsersService,JwtStrategy],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: Model, usersService: UsersService, JwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                    Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        JwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(LoginDto: LoginDto, req: Request)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                LoginDto\n                                            \n                                                            LoginDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(registerDto: RegisterDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                registerDto\n                                            \n                                                            RegisterDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpException, Injectable } from '@nestjs/common';\nimport { RegisterDto } from './dto/register.dto';\nimport { LoginDto } from './dto/login.dto';\nimport { Model } from 'mongoose';\nimport { User } from 'src/NatinalteamModel';\nimport { InjectModel } from '@nestjs/mongoose';\nimport * as bcrypt from 'bcryptjs';\nimport { UsersService } from 'src/users/users.service';\nimport { CreateUserDto } from 'src/users/dto/create-user.dto';\nimport { JwtModule, JwtService } from '@nestjs/jwt';\nimport { Request } from 'express';\nimport session from 'express-session';\nimport { Response } from 'express';\n\n\n@Injectable()\nexport class AuthService {\n  [x: string]: any;\n  constructor(@InjectModel(User.name) private readonly userModel: Model,\n  private readonly usersService: UsersService,\n  private readonly JwtService: JwtService) {}\n\n\n\n  async register(registerDto: RegisterDto) {\n    const user = await this.userModel.findOne({\"email\": registerDto.email }).exec();\n    console.log(registerDto.email)\n    if(user){\n      throw new HttpException(\"User already exist\",400);\n    }\n    \n    registerDto.password = await bcrypt.hash(registerDto.password,10);\n  \n    return await this.usersService.create(registerDto)\n  }\n\n\n\n  async login(LoginDto: LoginDto ,  req: Request ) {\n    const user = await this.userModel.findOne({email: LoginDto.email }).exec();\n  \n    if(!user){\n      throw new HttpException(\"User not found\",404);\n    }\n\n    const ispasswordMatch = await bcrypt.compare(LoginDto.password,user.password)\n\n    if(!ispasswordMatch){\n      throw new HttpException(\"Password is wrong\",400);\n    }\n\n    const accessToken = this.JwtService.sign({\n      sub: user.id,\n      email: user.email\n    })\n\n    req.session.user = LoginDto //Save user information in session\n\n    return {access_Token:accessToken,session:req.session};\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                age\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                first_name\n                            \n                            \n                                    \n                                    \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                last_name\n                            \n                            \n                                    \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        age\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsOptional()@Max(150)@ApiProperty({description: 'Age of user', example: 28, maximum: 150})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@IsEmail()@ApiProperty({description: 'Email of user', example: 'ssuorena@gmail.com', format: 'email'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        first_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()@MinLength(2)@ApiProperty({description: 'First name of user', example: 'Suorena', minLength: 2})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsNotEmpty()@ApiProperty({description: 'ID of users in mongo db database', maximum: 10000, minimum: 100, example: 150})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        last_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()@MinLength(2)@ApiProperty({description: 'Last name of user', example: 'Saeedi', minLength: 2})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()@ApiProperty({description: 'Password of user', example: '12345'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:60\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { IsEmail, IsNotEmpty, IsNumber, IsOptional, IsString, Max, MaxLength, MinLength } from \"class-validator\";\n\nexport class CreateUserDto {\n    @IsNumber()\n    @IsNotEmpty()\n    @ApiProperty({\n        description:\"ID of users in mongo db database\",\n        maximum:10000,\n        minimum:100,\n        example:150\n\n    })\n    id: number\n    @IsString()\n    @IsNotEmpty()\n    @IsEmail()\n    @ApiProperty({\n        description: \"Email of user\",\n        example:\"ssuorena@gmail.com\",\n        format:\"email\"\n    })\n    email: string;\n    @IsNotEmpty()\n    @IsString()\n    @MinLength(2)\n    @ApiProperty({\n        description: \"First name of user\",\n        example:\"Suorena\",\n        minLength:2\n    })\n    first_name: string;\n    @IsNotEmpty()\n    @IsString()\n    @MinLength(2)\n    @ApiProperty({\n        description: \"Last name of user\",\n        example:\"Saeedi\",\n        minLength:2\n    })\n    last_name: string;\n    @IsNumber()\n    @IsOptional()\n    @Max(150)\n    @ApiProperty(\n        {\n            description: \"Age of user\",\n            example:28,\n            maximum:150\n        }\n    )\n    age: number;\n    @IsNotEmpty()\n    @IsString()\n    @ApiProperty({\n        description: \"Password of user\",\n        example:\"12345\",\n\n    })\n    password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jwt-auth/jwt-auth.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AuthGuard('jwt')\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                handleRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/jwt-auth/jwt-auth.guard.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleRequest\n                        \n                    \n                \n            \n            \n                \nhandleRequest(err, user, info)\n                \n            \n\n\n                    \n                        \n                            Defined in src/jwt-auth/jwt-auth.guard.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                err\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                info\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, ExecutionContext } from \"@nestjs/common\";\nimport { AuthGuard } from \"@nestjs/passport\";\nimport { UnauthorizedException } from \"@nestjs/common\";\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {\n  canActivate(context: ExecutionContext) {\n    return super.canActivate(context);\n  }\n\n  handleRequest(err, user, info) {\n    // You can throw an error based on certain conditions\n    if (err || !user) {\n      throw err || new UnauthorizedException();\n    }\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategy/jwt.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategy/jwt.strategy.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(payload: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/strategy/jwt.strategy.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\n    import { PassportStrategy } from \"@nestjs/passport\";\nimport { tree } from \"next/dist/build/templates/app-page\";\n    import { Strategy, ExtractJwt } from 'passport-jwt';\n    \n    @Injectable()\n    export class JwtStrategy extends PassportStrategy(Strategy) {\n        constructor() {\n            super({\n                jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n                ignoreExpiration: false,\n                secretOrKey: 'secret2',\n        \n            });\n        }\n    \n        async validate(payload: any) {\n            console.log(\"okook\")\n            return {\n                id: payload.sub,\n                email: payload.email,\n            };\n        }\n    }\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LimitMiddleware.html":{"url":"injectables/LimitMiddleware.html","title":"injectable - LimitMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LimitMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/limit/limit.middleware.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        use\n                        \n                    \n                \n            \n            \n                \nuse(req: any, res: any, next: () => void)\n                \n            \n\n\n                    \n                        \n                            Defined in src/limit/limit.middleware.ts:5\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NestMiddleware } from '@nestjs/common';\nimport { rateLimit } from 'express-rate-limit';\n@Injectable()\nexport class LimitMiddleware implements NestMiddleware {\n  use(req: any, res: any, next: () => void) {\n    rateLimit({\n      windowMs: 10 * 60 * 1000, // 15 minutes\n      max: 100, // limit each IP to 100 requests per windowMs\n    })(req, res, next);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoggerMiddleware.html":{"url":"injectables/LoggerMiddleware.html","title":"injectable - LoggerMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LoggerMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/logger/logger.middleware.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        use\n                        \n                    \n                \n            \n            \n                \nuse(req: Request, res: Response, next: () => void)\n                \n            \n\n\n                    \n                        \n                            Defined in src/logger/logger.middleware.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger('HTTP')\n                    \n                \n                    \n                        \n                                Defined in src/logger/logger.middleware.ts:6\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger, NestMiddleware } from '@nestjs/common';\nimport { Request, Response } from 'express';\n\n@Injectable()\nexport class LoggerMiddleware implements NestMiddleware {\n  private logger = new Logger('HTTP');\n  use(req: Request, res: Response, next: () => void) {\n    const {ip, method, baseUrl}=req;\n    const userAgent = req.get('user-agent') || '';\n    const startAt = process.hrtime();\n    res.on('finish',()=>{\n      const {statusCode} = res\n      const contentLenght = res.get('content-length');\n      const dif = process.hrtime(startAt);\n      const responseTime = dif[0]*1e3 + dif[1]*1e-6;\n      this.logger.log(\n        `Method :${method} , baseUrl:${baseUrl} , statusCode:${statusCode} , contentLenght:${contentLenght} , responseTime:${responseTime}ms , userAgent:${userAgent} , ip:${ip},`\n      )\n    \n    })\n    next();\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginDto.html":{"url":"classes/LoginDto.html","title":"class - LoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/login.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@ApiProperty({description: 'Email of user', example: 'ssuorena@gmail.com', format: 'email'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()@ApiProperty({description: 'Password of user', example: '12345'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login.dto.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { IsEmail, IsNotEmpty, IsString } from \"class-validator\";\n\nexport class LoginDto {\n    @IsEmail()\n    @ApiProperty({\n        description: \"Email of user\",\n        example:\"ssuorena@gmail.com\",\n        format:\"email\"\n    })\n    email: string;\n\n    @IsNotEmpty()\n    @IsString()\n    @ApiProperty({\n        description: \"Password of user\",\n        example:\"12345\",\n\n    })\n    password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterDto.html":{"url":"classes/RegisterDto.html","title":"class - RegisterDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/register.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                age\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                first_name\n                            \n                            \n                                    \n                                    \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                last_name\n                            \n                            \n                                    \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        age\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsOptional()@Max(150)@ApiProperty({description: 'Age of user', example: 28, maximum: 150})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/register.dto.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@IsEmail()@ApiProperty({description: 'Email of user', example: 'ssuorena@gmail.com', format: 'email'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/register.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        first_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()@MinLength(2)@ApiProperty({description: 'First name of user', example: 'Suorena', minLength: 2})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/register.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsNotEmpty()@ApiProperty({description: 'ID of users in mongo db database', maximum: 10000, minimum: 100, example: 150})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/register.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        last_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()@MinLength(2)@ApiProperty({description: 'Last name of user', example: 'Saeedi', minLength: 2})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/register.dto.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()@ApiProperty({description: 'Password of user', example: '12345'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/register.dto.ts:60\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { IsEmail, IsNotEmpty, IsNumber, IsOptional, IsString, Max, MaxLength, MinLength } from \"class-validator\";\n\nexport class RegisterDto {\n    @IsNumber()\n    @IsNotEmpty()\n    @ApiProperty({\n        description:\"ID of users in mongo db database\",\n        maximum:10000,\n        minimum:100,\n        example:150\n\n    })\n    id: number\n    @IsString()\n    @IsNotEmpty()\n    @IsEmail()\n    @ApiProperty({\n        description: \"Email of user\",\n        example:\"ssuorena@gmail.com\",\n        format:\"email\"\n    })\n    email: string;\n    @IsNotEmpty()\n    @IsString()\n    @MinLength(2)\n    @ApiProperty({\n        description: \"First name of user\",\n        example:\"Suorena\",\n        minLength:2\n    })\n    first_name: string;\n    @IsNotEmpty()\n    @IsString()\n    @MinLength(2)\n    @ApiProperty({\n        description: \"Last name of user\",\n        example:\"Saeedi\",\n        minLength:2\n    })\n    last_name: string;\n    @IsNumber()\n    @IsOptional()\n    @Max(150)\n    @ApiProperty(\n        {\n            description: \"Age of user\",\n            example:28,\n            maximum:150\n        }\n    )\n    age: number;\n    @IsNotEmpty()\n    @IsString()\n    @ApiProperty({\n        description: \"Password of user\",\n        example:\"12345\",\n\n    })\n    password: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SessionData.html":{"url":"interfaces/SessionData.html","title":"interface - SessionData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SessionData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/session.visit.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            visit\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        visit\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        visit:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Session, SessionData } from 'express-session';\n\n\ndeclare module 'express-session' {\n  interface SessionData {\n    visit?: number; \n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SessionData-1.html":{"url":"interfaces/SessionData-1.html","title":"interface - SessionData-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SessionData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/session.user.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         LoginDto\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LoginDto\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Session, SessionData } from 'express-session';\nimport { LoginDto } from './dto/login.dto';\n\ndeclare module 'express-session' {\n  interface SessionData {\n    user?: LoginDto; // Assuming 'LoginDto' is your user model\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/update-user.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateUserDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateUserDto } from './create-user.dto';\n\nexport class UpdateUserDto extends PartialType(CreateUserDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/NatinalteamModel.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                age\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                first_name\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                last_name\n                            \n                            \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        age\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/NatinalteamModel.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/NatinalteamModel.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        first_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/NatinalteamModel.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/NatinalteamModel.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        last_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/NatinalteamModel.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/NatinalteamModel.ts:55\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\nimport * as mongoose from 'mongoose';\n\n@Schema({ collection: 'users' })\nexport class User extends Document {\n  @Prop()\n  id: number;\n\n  @Prop()\n  email: string;\n\n  @Prop()\n  first_name: string;\n\n  @Prop()\n  last_name: string;\n\n  @Prop()\n  age: string;\n\n  @Prop()\n  password: string;\n\n}\n\nexport const UserSchema = SchemaFactory.createForClass(User);\n\nexport const UserModel = mongoose.model('User', UserSchema);\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User-1.html":{"url":"classes/User-1.html","title":"class - User-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/entities/user.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                createUser\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                find\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                simpleGet\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    createUser(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'This API Create user'})@ApiBody({type: CreateUserDto})\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@UseGuards(JwtAuthGuard)@ApiHeader({name: 'Authorization', description: 'Send Authorization Token'})@ApiBearerAuth()@ApiResponse({status: 200, description: 'Data send properly', type: CreateUserDto})@ApiParam({name: 'id', description: 'ID of The user'})@ApiOperation({summary: 'This API retun user with certain id'})\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ApiOperation({summary: 'This API remove user with certain id'})\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:84\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        simpleGet\n                        \n                    \n                \n            \n            \n                \n                        \n                    simpleGet()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@UseGuards(ThrottlerGuard)@ApiHeader({name: 'Authorization', description: 'Send Authorization Token'})@ApiResponse({status: 200, description: 'Data send properly', type: CreateUserDto})@ApiBearerAuth()@ApiOperation({summary: 'This API retun all users '})\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:62\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, UseGuards, UseInterceptors, Inject } from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { User } from 'src/NatinalteamModel';\nimport { JwtAuthGuard } from 'src/jwt-auth/jwt-auth.guard';\nimport { ApiBearerAuth, ApiBody, ApiHeader, ApiOperation, ApiParam, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { CACHE_MANAGER } from '@nestjs/cache-manager';\nimport { Cache } from 'cache-manager';\nimport { ThrottlerGuard } from '@nestjs/throttler';\n\n\n@Controller('users')\n@ApiTags(\"Users\")\nexport class UsersController {\n  constructor(private readonly usersService: UsersService,\n    @Inject(CACHE_MANAGER) private cacheManager: Cache\n    ) {}\n\n  @Get(':id')\n  @UseGuards(JwtAuthGuard)\n  @ApiHeader({\n    name:\"Authorization\",\n    description: \"Send Authorization Token\"\n  })\n  @ApiBearerAuth()\n  @ApiResponse({\n    status:200,description:\"Data send properly\",type:CreateUserDto\n  })\n  @ApiParam({\n    name:\"id\",\n    description:\"ID of The user\"\n  })\n  @ApiOperation({ summary: 'This API retun user with certain id' })\n  async find(@Param('id') id: number) {\n    return await this.usersService.findone(id);\n  }\n\n  @Post()\n  //@UseGuards(JwtStrategy)\n  @ApiOperation({ summary: 'This API Create user' })\n  @ApiBody({\n    type:CreateUserDto\n  })\n  async createUser(@Body() createUserDto: CreateUserDto):Promise {\n    return await this.usersService.create(createUserDto);\n  }\n  \n  // now in milliseconds (1 minute === 60000)\n  @Get() \n  @UseGuards(ThrottlerGuard)\n  //@UseGuards(JwtAuthGuard)\n  @ApiHeader({\n    name:\"Authorization\",\n    description: \"Send Authorization Token\"\n  })\n  @ApiResponse({\n    status:200,description:\"Data send properly\",type:CreateUserDto\n  })\n  @ApiBearerAuth()\n  @ApiOperation({ summary: 'This API retun all users ' })\n  async simpleGet() {\n    // Check if c has a value\n    const allUsers = await this.cacheManager.get('users')\n    console.log(allUsers)\n    if (allUsers) {\n      return  allUsers\n    }\n    else{\n      const allUsers = await this.usersService.findAll();\n      await this.cacheManager.set('users', allUsers,100000)\n      return  allUsers\n\n\n\n    }\n  \n  }\n\n\n\n  @Delete(':id')\n  @ApiOperation({ summary: 'This API remove user with certain id' })\n  remove(@Param('id') id: string) {\n    return this.usersService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUsersService\n\nUsersService\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { UsersController } from './users.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { UserSchema, User } from 'src/NatinalteamModel';\nimport { CacheModule } from '@nestjs/cache-manager';\nimport { ThrottlerModule } from '@nestjs/throttler';\n\n@Module({\n  imports:[MongooseModule.forFeature([{ name:User.name, schema: UserSchema }]),\n  CacheModule.register(),\n  ThrottlerModule.forRoot([\n    {\n    ttl:5*60*1000,\n    limit:10\n  },\n\n]),\n],\n  controllers: [UsersController],\n  providers: [UsersService],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findone\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                    Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createUserDto: CreateUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findone\n                        \n                    \n                \n            \n            \n                \n                        \n                    findone(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateUserDto: UpdateUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateUserDto\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpException, Injectable } from '@nestjs/common';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { User } from 'src/NatinalteamModel';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\n\n\n@Injectable()\nexport class UsersService {\n  constructor(@InjectModel(User.name) private readonly userModel: Model) {}\n  async create(createUserDto: CreateUserDto):Promise {\n    console.log(createUserDto)\n    const createdUser = new this.userModel(createUserDto);\n    \n    return await createdUser.save();\n  }\n\n  async findAll(): Promise {\n    const result = await this.userModel.find().exec()\n    return  result;\n  }\n\n  async findone(id: number): Promise {\n    const result = await this.userModel.findOne({ id });\n    if(!result){\n      throw new HttpException(`User with ID: ${id}  not found`,404);\n    }\n    return result;\n  }\n\n\n  update(id: number, updateUserDto: UpdateUserDto) {\n    return `This action updates a #${id} user`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} user`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/NatinalteamModel.ts\n            \n            class\n            User\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/NatinalteamModel.ts\n            \n            variable\n            UserModel\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/NatinalteamModel.ts\n            \n            variable\n            UserSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/dto/login.dto.ts\n            \n            class\n            LoginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/register.dto.ts\n            \n            class\n            RegisterDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/auth/entities/auth.entity.ts\n            \n            class\n            Auth\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/session.user.ts\n            \n            interface\n            SessionData\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/strategy/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/jwt-auth/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/limit/limit.middleware.ts\n            \n            injectable\n            LimitMiddleware\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/logger/logger.middleware.ts\n            \n            injectable\n            LoggerMiddleware\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/session.visit.ts\n            \n            interface\n            SessionData\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/users/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/entities/user.entity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/7)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/cache-manager : ^2.2.1\n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/jwt : ^10.2.0\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/mongoose : ^10.0.2\n        \n            @nestjs/passport : ^10.0.3\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @nestjs/swagger : ^7.3.0\n        \n            @nestjs/throttler : ^5.1.2\n        \n            @types/passport-jwt : ^4.0.1\n        \n            analytics-node : ^6.2.0\n        \n            bcryptjs : ^2.4.3\n        \n            cache-manager : ^5.4.0\n        \n            cache-manager-redis-store : ^3.0.1\n        \n            cache-manager-redis-yet : ^3.0.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            csurf : ^1.11.0\n        \n            express-rate-limit : ^7.1.5\n        \n            express-session : ^1.18.0\n        \n            helmet : ^7.1.0\n        \n            mongoose : ^8.1.1\n        \n            passport : ^0.7.0\n        \n            passport-jwt : ^4.0.1\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.8.1\n        \n            tiny-csrf : ^1.1.4\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\nExample :$ npm installRunning the app\nExample :# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\nExample :# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nAuthModule -->\n\nUsersService->AuthModule\n\n\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    7 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    7 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            UserModel   (src/.../NatinalteamModel.ts)\n                        \n                        \n                            UserSchema   (src/.../NatinalteamModel.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/NatinalteamModel.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        UserModel\n                        \n                    \n                \n            \n                \n                    \n                        Default value : mongoose.model('User', UserSchema)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UserSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(User)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
